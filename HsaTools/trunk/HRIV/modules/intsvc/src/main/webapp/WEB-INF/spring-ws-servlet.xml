<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="unitDetailsEndpoint"
		class="se.vgregion.kivtools.search.intsvc.ws.sahlgrenska.UnitDetailsEndpoint">
		<constructor-arg ref="jaxbMarshaller" />
		<constructor-arg ref="jaxbMarshaller" />
		<property name="unitDetailsService" ref="unitDetailsService" />
	</bean>

	<bean id="unitDetailsService"
		class="se.vgregion.kivtools.search.intsvc.ws.sahlgrenska.UnitDetailsServiceImpl">
		<property name="unitRepository" ref="Search.UnitRepository" />
	</bean>

	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath"
			value="se.vgregion.kivtools.search.intsvc.ws.domain.sahlgrenska" />
	</bean>

	<bean
		class="org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping">
		<property name="mappings">
			<props>
				<prop key="{http://vgregion.se/hriv/schemas}UnitRequest">unitDetailsEndpoint</prop>
			</props>
		</property>
		<property name="interceptors">
			<bean
				class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor" />
		</property>
	</bean>
	<bean id="unitDetails"
		class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
		<property name="schema" ref="schema" />
		<property name="portTypeName" value="UnitRequestSOAP" />
		<property name="locationUri" value="/ws/unitDetailsService/" />
		<property name="targetNamespace" value="http://vgregion.se/hriv/schemas" />
	</bean>
	<bean id="schema" class="org.springframework.xml.xsd.SimpleXsdSchema">
		<property name="xsd" value="classpath:wsdl/unit_details_ws.xsd" />
	</bean>
	
	
	<bean id="jsch" class="com.jcraft.jsch.JSch" />

	<bean id="Push.Eniro"
		class="se.vgregion.kivtools.search.intsvc.ws.eniro.InformationPusherEniro">
		<property name="jsch" ref="jsch" />
		<property name="ftpHost" value="webbservern.se" />
		<property name="ftpPort" value="10022" />
		<property name="ftpDestinationFileName" value="test3.xml" />
		<property name="ftpUser" value="kapten" />
		<property name="ftpPassword" value="mrcaptain" />
		<property name="unitRepository" ref="Search.UnitRepository" />
		<property name="destinationFolder" value="/tmp/" />
		<property name="lastSynchedModifyDateFile" value="/tmp/lsmdf.txt" />
		<property name="lastExistingUnitsFile" value="/tmp/leuf.txt" />
		<property name="codeTablesService" ref="Search.CodeTablesService" />
	</bean>
	
	<bean id="jobDetailUnitDetailsPusher"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="Push.Eniro" />
		<property name="targetMethod" value="doService" />
		<property name="concurrent" value="false" />
	</bean>
	
	<bean id="simpleTriggerUnitDetailsPusher" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="jobDetailUnitDetailsPusher" />
		<!-- 10 seconds -->
		<property name="startDelay" value="10000" />
		<!-- repeat every 24 hours -->
		<property name="repeatInterval" value="86400000" />
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="startupDelay" value="10" />
		<property name="triggers">
			<list>
				<ref bean="simpleTriggerUnitDetailsPusher" />
			</list>
		</property>
	</bean>

</beans>