#summary Beskriver en logiska referensarkitekturen inkl referensmodellerna.
#labels RA

= Introduktion =

== Förkortningar och termer == 

|| *Förkortning* || *Betydelse* ||
|| VGR || Västra Götalandsregionen ||
|| SSL || Stockholms Läns Landsting ||
|| 3R || Samarbete mellan tre regioner; VGR, Region Skåne och SLL ||
|| RIV || Regelverk för interoperabilitet i vården ||
|| BIF || Bastjänster för informationsförsörjning ||

== Bakgrund ==
Här beskrivs den logiska delen av den referensarkitektur som har tagits fram gemensamt inom 3R och släppts som öppen källkod av VGR inom ramen för Öppna Program. 

Referensarkitekturen har även en teknisk arkitektur som är mer implemenationsnära, se [RA_Teknisk_arkitektur].

== Syfte ==
Syftet med referensarkitekturen är att uppnå skalfördelar med avseende på återanvändbarhet, förvaltningsbarhet, ekonomi och standardisering. Ett viktigt syfte är också att etablera ett fundament för spårbarhet från system-vy till teknologisk och teknisk vy av IT-ramverkskomponenter.

Som bas för referensarkitekturen finns en referensmodellen. Den definierar de entiteter som uttrycker arkitekturen hos de IT-lösningar som upphandlas och utvecklas inom 3R.  

Att definiera den taxonomi som tillämpas i kommunikationen med leverantörer och den struktur som förväntas av de produkter som levereras av våra leverantörer.

== Referenser ==
== Allmänt ==
|| *Organisation* || *Dokument* || *Beskrivning* ||
|| 3R || Modell Referensarkitektur 3R|| Modell för referensarkitektur (format: eap / enterprise Architect) ||

== Yttre arkitektur ==

|| *Organisation* || *Dokument* || *Beskrivning* ||
|| !CarLink Plus || Referensarkitektur Rapport 2 April 2004. || - ||
|| HISA || HISA (Healthcare Information Service Architecture). || Detta dokument refereras från !CareLink Plus. Dokumentet utgör en möjlig bas för fortsatt detaljering av den yttre arkitekturen, m.a.p process-orienterad integration. HISA defnierar bl.a. en metod för identifiering av tjänstedomäner. ||

Se [RA_Introduktion] för länkar till övriga dokument inom referensarktekturen.


= Sammanfattning - Viktigt innehåll =
Denna anvisning ska omfatta en metamodell för IT-ramverkskomponenter. Med IT-ramverkskomponenter avses komponenter som beställs eller byggs med krav på följsamhet mot IT-ramverket. Tydliga referenser ska finnas till RIV- och BIF-arbeten. 

Referensmodellen består av två delar: en referensmodell för inre arkitektur och en referensmodell för yttre arkitektur.

Referensmodellen för den inre arkitekturen beskriver principer för arkitekturen hos den funktionalitet som upphandlas eller utvecklas inom ramen för en så kallad tjänstedomän (relaterade termer: ”blomblad”, ”projekt”), enligt principerna för ”service component architecture” (förslag till översättning: komponentbaserad arkitetur för realisering av tjänster). 

Referensmodellen för den yttre arkiteturen beskriver principer för den tjänsteorienterade arkitektur genom vilken verksamhetskomponenter publicerar de tjänster som krävs för integration av verksamhetens processer.

Yttre arkiteturer - dvs specifikationer av integrationstjänster - drivs fram och ägs av Enterprise Architecture. Inre arkitektur – de verksamhetskomponenter som sammantaget realiserar beställd funktionalitet inom ramen för en tjänstedomän – bildar ett fristående förvaltningsobjekt. Enterprise Architecture bistår projekten vid modellering av inre arkitetur, men tar inget ägarskap för modellerna.

Referensarkitekturen är framtagen gemensamt för ”3R” (tre regioner: Västra Götalandsregionen, Region Skåne, Stockholms Läns Landsting), men kan påföras restriktioner drivna av regionala krav. Dessa region- eller tjänstedomän-specifika anvisningar kallas profiler. 

Dokumentet ger en överblick över hur spårbarhet ska åstadkommas från modeller i den logiska vyn till modeller i de teknologiska och tekniska vyerna. Detaljerna för spårbarhet återfinns i underliggande teknologi-specifika anvisningar. 

Följande listning redovisar de viktigaste aspekterna av spårbarhet som behöver åskådliggöras:
  * Spårbarhet till plattformsspecifik design för de plattformar 3Rs EA avser omfatta
  * Spårbarhet till strukturer för konfigurationsstyrning av systems beskrivning och realisering. Här avses strukturer i såväl modeller som testfall, funktionalitet och projektdefinitioner för utvecklingsverktyg.
  * Spårbarhet till katalogstrukturer (repositorier) för versionsindikerade tekniska tjänstespecifkationer (t.ex. XSD, WSDL)
  * Spårbarhet till komponentkataloger för plattformsspecifika binärer (enheter för komponentbaserad återanvändning inom ett system)
  * Spårbarhet till namnrymder för såväl integrationstjänster som verksamhetskomponenter.

= Den yttre arkitekturen =

http://oppna-program.googlecode.com/svn/wiki/RA_Logisk_arkitektur_Yttre_ark_exempel.png
 

Bilden illustrerar tre tjänstedomäner, varav en är en process-nära tjänstedomän bestående av en eller flera orkestrerande integrationstjänster. Tjänstedomäner kan i sin tur grupperas i verksamhetsdomäner. Illustrationen belyser inte denna aspekt av den yttre arkitekturen.

Varje tjänstedomän omfattar ett antal integrationstjänster. Integrationstjänsterna är av två slag – atomära eller orkestrerande.

De atomära tjänsternas gränssnitt är just gränssnitt i traditionell bemärkelse. De representerar ett informationobjekt eller en uppgift och därmed associerade operationer. De har inga beroenden på gränssnittsnivå till andra tjänster. Definitionen av en atomär integrationstjänst gör inga antaganden om realiseringens arkitektur. De representerar atomära transaktioner med ickefunktionella krav på ”allt eller inget”. En atomär integrationstjänst kan vara synkron eller asynkron. En synkron tjänst definieras av traditionella uppdrag/svar-operationer. En asynkron tjänst kan vara antingen envägs- eller tvåvägs. I båda fallen finns ett uppdragsgränssnitt med envägsoperationer (utan svar). I fallet tvåvägstjänst finns dessutom ett  svarsgränssnitt – också detta med envägsoperationer. Svarsgränssnittet måste realiseras av den orkestrerande tjänst till vilken den asynkrona integrationstjänsten ska vara en partner. 

Asynkrona envägstjänster används i första hand för att synkronisera information som föds ur systemarvet eller för start av en asynkron orkestrerande integrationstjänst. Asynkrona tvåvägstjänster är till för att möjliggöra asynkron orkestrering från en orkestrerande integrationstjänst. Dessa tjänster kan vara av batch-liknande karaktär, eller av andra skäl lämpa sig bäst för asynkron integration.

De orkestrerande integrationstjänsterna är definierade i termer av ett primärt tjänstegränssnitt och ett eller flera partner-länkar. Dessa länkar kan vara synkrona uppdrag/svar, asynkrona envägs eller asynkrona tvåvägs. En partnerlänk definierar ett beroende till an atomär integrationstjänst. För tvåvägslänkar tillkommer dessutom en svarstjänst, genom vilken partnern levererar det asynkrona svarsmeddelandet. 

Svarsgränssnittet tillhör den asynkrona, atomära tvåvägstjänsten. Detta förhållande framgår inte av illustrationen. Istället tycks svarsgränssnittet felaktigt ägas av den orkestrerande integartionstjänsten och hamnar således i fel tjänstedomän.  Det kan också finnas en svarstjänst för att ta emot felmeddelanden. Dessa är inte illustrerade i bilden.
Ägarskap av gränssnitt är olika för orkestrerande och atomära integrationstjänster. Atomära integrationstjänster äger såväl det producerande som eventuella konsumerande gränssnitt (dvs svarsgränssnitten). Av detta följer att orkestrerande integrationstjänster endast äger det primära gränssnittet. Syftet med dessa ägasrskapsregler är att behålla de atomära integrationstjänsternas obereonde till sin omgivning.

En orkestrerande integrationstjänst definieras i syfte att just orkestrera en process. Det primära gränssnittet har som regel bara en operation, vars semantik därför är likvärdig med tjänsten som helhet. Orkestrerande processer definieras således i termer av den process de orkestrerar, snarare än av en uppsättning operationer. Processbeskrivningen kan därför ses som en del av tjänstedefinitionen. Den behöver inte vara exekverbar, men är förmodligen uttryckt i en notation som är närliggande dess exekverbara motsvarighet.

= Inre arkitektur och verksamhetskomponenter =

http://oppna-program.googlecode.com/svn/wiki/RA_Logisk_arkitektur_Inre_ark.png
 