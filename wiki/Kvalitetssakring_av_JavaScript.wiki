#summary Riktlinjer för kvalitetssäkring av JavaScriptkod som exekveras i användarens webbläsare.
#labels Project-RA

=Kvalitetssäkring av !JavaScript/ECMAScript=

==Sammanfattning==
_Detta dokument innehåller riktlinjer för kvalitetssäkring av !JavaScriptkod som exekveras i användarens webbläsare._

_Dokumentets målgrupp består i första hand av beställare som vill kvalitetskontrollera leveranser samt utvecklare och systemadministratörer som vill kontrollera att det de levererar håller önskad kvalitet. Relativt goda kunskaper om gränssnittsprogrammering förutsätts._

==Inledning==
Ett mycket viktigt led i kvalitetssäkringen av all gränssnittsrelaterad kod som används för webblösningar är att säkerställa att den är korrekt skriven, det vill säga följer de specifikationer som finns och är skriven enligt god programmeringssed.

Att validera !JavaScript är inte lika rakt på sak som att validera HTML eller CSS. Det finns verktyg som kontrollerar att man har använt korrekt syntax, men inget som verifierar att alla metoder och objekt finns i W3C:s DOM (Document Object Model, definierar hur objekt i HTML-dokument exponeras för skript), hur väl de stöds av olika webbläsare, eller ens om skriptet fungerar.

Därför innebär kvalitetssäkring av !JavaScript ett arbete i flera steg, varav funktionstester i de webbläsare som finns specificerade i [http://code.google.com/p/oppna-program/wiki/Krav_pa_webblasare Krav på webbläsare] är det viktigaste.

I detta och andra kravdokument används den mer utbredda termen !JavaScript i stället för det standardiserade [http://www.ecma-international.org/publications/standards/Ecma-262.htm ECMAScript]. !JavaScript är kompatibelt med ECMAScript men tillhandahåller utökad funktionalitet. För en detaljerad beskrivning av hur !JavaScript och ECMAScript förhåller sig till varandra, se [https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/JavaScript_Overview#JavaScript_and_the_ECMAScript_Specification JavaScript and the ECMAScript Specification] på Mozilla Developer Center.

Notera även att grundläggande funktionalitet inte får vara beroende av att !JavaScript är aktiverat i användarens webbläsare. Därför är en del av funktionstestningen att avaktivera !JavaScript och därefter kontrollera att det fortfarande går att använda tjänsten.

==Onlinetjänster för syntaxverifiering==
Två tjänster, båda kostnadsfria, för verifiering av !JavaScriptsyntax har identifierats. Båda är så kallade ”lint checkers” som rapporterar kodsekvenser som kan misstänkas skapa problem.

===JSLint, The !JavaScript Verifier===
[http://www.jslint.com/ JSLint] består av ett textinmatningsfält som man klistrar in koden som ska verifieras i. Man kan göra vissa inställningar för att reglera nivån på de varningar som genereras.

===!JavaScript Lint===
Precis som JSLint har [http://www.javascriptlint.com/ JavaScript Lint] ett textinmatningsfält, men verktyget finns även som ett fristående program.

==Tillägg till webbläsare==
Utöver de tidigare nämnda onlineverktygen finns också en del tillägg till webbläsare, främst till Mozillabaserade sådana.

===Firebug (Firefox)===
För [http://www.mozilla.com/firefox/ Firefox] finns tillägget [http://www.getfirebug.com/ Firebug], som bland annat innehåller en !JavaScript-debugger och visar eventuella !JavaScriptfel i en konsoll.

==Funktionstest i webbläsare==
Att inga problem rapporteras av tjänsterna för verifiering av !JavaScriptsyntax eller webbläsartillägget som nämns här, innebär inte att skriptet kommer att fungera i webbläsare eller ens att det använder objekt och metoder som finns i W3C:s DOM (Document Object Model). Därför måste syntaxverifiering kompletteras med funktionstest i de webbläsare som är aktuella enligt dokumentet [http://code.google.com/p/oppna-program/wiki/Krav_pa_webblasare Krav på webbläsare].

==Kontroll av biblioteksval==
För att underlätta och standardisera utveckling och felsökning rekommenderas utvecklare att vid behov använda !JavaScriptbiblioteket [http://developer.yahoo.com/yui/ Yahoo! User Interface Library (YUI)]. Som en del i kvalitetssäkringen ingår därför att kontrollera om andra bibliotek eller ramverk används, och i så fall om de innehåller funktionalitet som motiverar valet att använda dem i stället för YUI. 

==Tolkning av resultaten==
Båda verktygen som nämns i ”Onlinetjänster för syntaxverifiering” är mycket strikta i sin syntaxtolkning, vilket medför att de rapporterar viss tillåten syntax som problem. Det finns anledningar till att de gör det, så målet bör vara att åtgärda alla rapporterade problem. Tjänsterna tillhandahåller också dokumentation som förklarar varför de anser syntaxen vara ett problem eller ett potentiellt problem.

Vid testning ska inga fel visas i !JavaScriptkonsollen, antingen den konsoll som är inbyggd i Firefox eller den utökade som tillägget Firebug tillhandahåller.

Vid funktionstest i webbläsare skall full funktionalitet erhållas i de webbläsare som anges i dokumentet [http://code.google.com/p/oppna-program/wiki/Krav_pa_webblasare Krav på webbläsare].

Om fel rapporteras, se avsnittet ”Åtgärdande av fel”.

==Åtgärdande av fel==
Om något av verktygen rapporterar att !JavaScriptkoden innehåller fel eller potentiella fel, eller om exekveringsfel uppstår i någon av de aktuella webbläsarna, skall det åtgärdas. Eftersom fel kan ge upphov till följdfel är det lämpligt att börja med att åtgärda det första felet för att därefter testa igen. Proceduren upprepas tills inga fel återstår.

==Referenser==
  # ECMAScript: http://www.ecma-international.org/publications/standards/Ecma-262.htm
  # !JavaScript and the ECMAScript Specification: https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/JavaScript_Overview#JavaScript_and_the_ECMAScript_Specification
  # JSLint: http://www.jslint.com/
  # !JavaScript Lint: http://www.javascriptlint.com/
  # Firefox: http://www.mozilla.com/firefox/
  # Firebug: http://www.getfirebug.com/
  # YUI: http://developer.yahoo.com/yui/