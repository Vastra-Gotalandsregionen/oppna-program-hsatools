#summary Beskriver källkodstrukturen i RA-projekt.

= Introduktion =

Alla system som bygger på referensarkitekturen (RA) har en liknande källkodsstruktur. Bland annat den maven-plugin som följer med RA är beroende av att strukturen ser ut så som här beskrivs och nämnda plugin används också för att skapa den specifika strukturen. 

Här beskrivs på detaljnivå:
  * de ingående delarna i källkodsstrukturen
  * hur byggsystemet, baserat på Maven2, förhåller sig till källkodstrukturen

För konkreta exampel på hur byggsystemet används för att bygga RA-system och komponenter, se [RA_Anvandarmanual_Utvecklingsmiljo]. 

= Källkodstruktur i RA-system =
== Namngivning ==
=== Namngivning av system ===
Varje systems namn måste vara globalt unikt för att undvika namnkollisioner vid driftsättning.
=== Namngivning av verksamhetskomponenter ===
Namngivning av komponenter:
TODO: namnkonvention, prefix för verksamhetskomponenter (t ex ”e” för entitet) – stäm av mot referensarkitekturen! Ej bestämt ännu (2006-12-18).

== Ingående delar i strukturen ==
Innehåll och användning av de olika delarna i strukturen beskrivs här.
=== Översikt över hierarkin inom en verksamhetskomponent ===
Varje system består av ett antal verksamhetskomponenter, varje verksamhetskomponent har en inre struktur enligt följande: 

http://oppna-program.googlecode.com/svn/wiki/RA_Anvandarmanual_Kallkodstruktur_BCHierarkin.png

En applikation byggs upp av moduler som i sin tur kan byggas upp av kompositer. En komposit är en återanvändbar byggsten, bestående av ett antal sidor som tillsammans bildar en "dialog". Uppdelningen i kompositer härstammar från kravet på modularisering i weblagret och portabilitet mellan portlet och webapp. En verksamhetskomponent kan vara av typen att den bara bidrar med kompositer, ingen applikation. 

En applikation är främst är en _packetering_ av den underliggande funktionaliteten (innehåller i stort sett bara paketeringsartefakter) i en verksamhetskompontent, att jämföra med ett system som består av ett antal, hierarkiskt ordnade, verksamhetskomponenter. 


=== Verksamhetskomponenter ===
Direkt under `<SystemNamn>/trunk` ligger alla verksamhetskomponenter för ett system samt en byggfil, pom.xml, för att bygga hela systemet. Varje verksamhetskomponent innehåller i sin tur följade underkataloger: 
  * applications 
  * composites
  * modules 
  * sql 
 
=== applications ===
 
Innehållet beror på vilken typ av enhet som ska driftsättas. En del verksamhetskomponenter bidrar inte med någon applikation utan bara med composites, i det fallet finns heller inga modules. Det är inte meningen att applikations ska innehålla källkod (ska finnas under modules och composites) förutom den extra kod som kan krävas för att producera till exempel en exekverbar JAR-fil (typiskt en klass med en main-metod).
Typiskt innehåll i applications är artefakter för att bygga:
  * EAR-filer
  * Java Webstart arkiv
  * Exekverbara JAR-filer 

=== modules ===
Innehåller källkod för två typer av artefakter, integrationstjänster, som återfinns under intsvc samt web-applikationer (inkluderande Portlets) som återfinns i web. Strukturen inuti dessa följer den standardiserade Maven2-projektstrukturen (se [http://maven.apache.org Maven2]).
 
==== intsvc ====
Innehåller integrationstjänster i form av Webservices, JMS eller Connector för ingående trafik.
I fallet av Webservice finns även bindningsklasserna för WSDL-filen här (vi arbetar uteslutande enligt principen "contract-first", dsv bindningsklasserna genereras från WSDL-filen).
==== web ====
Innehåller en Webapplikation eller Portlet.
TODO: rekommenderad uppbyggnad av en webapplikation med JAR-filer som innehåller vyfiler + resurser. Teknik: JSF, Facelets.
Referera till dokument Anvisningar_Portletutveckling.doc (inte klart ännu).

=== composites ===
Innehåller källkod för återanvändbara delar avsedda för komposition. Strukturen inuti komposit-delarna följer den standardiserade Maven2-projektstrukturen (se [http://maven.apache.org Maven2]).
==== svc ====
Tjänster för verksamhetskomponenten. Dessa tjänster exponeras bara inom systemet (och givetvis inom verksamhetskomponenten). För att exponera en tjänst utanför systemgränsen behöver den exponeras som en integrationstjänst, se avsnitt _intsvc_ ovan.
==== types ====
Gemensamma typer.
==== webcomp ====
TODO: beskriv hur webkomponenter i form av JAR-filer bidrar till en webapplikation/portlet. Hänger ihop med sektion _web_.
Referera till dokument Anvisningar_Portletutveckling.doc.
==== schema ====
Innehåller XML-scheman som används för integration via tjänster som beskrivs i _intsvc_ ovan.
Scheman används här för att generera JAXB-bindningsklasser (bindning mellan Java och XML) som används inom verksamhetskomponenten.

= Byggsystem =
Byggsystemet är baserat på [http://maven.apache.org Maven2] med tillägg gjorda i form av plugins.
Det här avsnittet bygger på det tidigare avsnittet _Källkodsstruktur i RA-system_ och upprepar inte sådant som nämns där. 

== Maven2 relationer mellan pom.xml filer ==
Det är viktigt att förstå hur Maven2 använder föräldra-barn relationer mellan pom.xml filer och hur det påverkar versioneringen. Det finns två typer av beroenden som beskrivs här.

=== Versionerad relation med arv (barn pekar ut förälder) ===
I den här relationen pekar barnet ut föräldern via Maven repositoriet. Föräldern kvalificeras med namn och version. Den här relationen är alltså inte via filsystemet (för Maven1-användare: detta skiljer sig kraftigt från tidigare version).

I den här relationen ärver barnet egenskaper från föräldern.

Det är mycket viktigt att versionerna överensstämmer. Uppgraderas versionen på föräldern så måste även barnets pom.xml uppgraderas med den nya föräldra-versionen.

http://oppna-program.googlecode.com/svn/wiki/RA_Anvandarmanual_Kallkodstruktur_VersionForalderOchBarn.png

=== Filssystemsrelation (förälder pekar ut barn) ===
I den här relationen pekar föräldern ut barnet med en relativ sökväg på filsystemet.
Relationen är inte versionerad och det enda syftet med den är att kunna bygga underliggande projekt med en överordnad byggfil.

http://oppna-program.googlecode.com/svn/wiki/RA_Anvandarmanual_Kallkodstruktur_FilsystemrelationForalderTillBarn.png

  