#summary Introduktion till referensarkitekturen
#labels Featured,RA
= Innehåll = 

<wiki:toc max_depth="3" />

= Introduktion =

Denna sida ska ge en snabb introduktion till referensarkitekturen (förkortad RA) och den dokumentation och exempel som finns.
Främst görs det i form av läsanvisningar och hänvisning till kodexempel.

= Referensarkitekturens syfte = 
Det övergripande syftet med att ha en referensarkitektur är att styra alla projekt mot en gemensam arkitektur. Fördelarna med detta är många: 

  * Projektekonomi
    * Generellt: Korta projekttiden
    * Minska tiden för uppsättning av projektets infrastruktur
    * Minska mängden ”teknisk forskning” i projekten
    * Etc.
  * IT-ekonomi
    * Ökad livslängd på utvecklade system 
    * Flexibelt nyttjande av personal/konsulter
    * Minskade utbildningskostnader
  * Verksamhetsnytta
    * Välintegrerade grundfunktioner tvärs system, t ex inloggning
  * Nå tydlighet i arkitekturarbetet
    * Kraven på arkitektur är kända för projekten

= Vad är en referensarkitektur? = 

En referensarkitektur är en abstrakt arkitektur som används som en mall för att skapa konkreta arkitekturer. Referensarkitekturen innehåller principer och guidelines som bestämmer hur system skall designas.

Motivet för referensarkitekturen är vanligtvis en övergripande vision och ett antal krav. Se [RA_Vision_och_krav] för en genomgång av den vision och de konkreta krav som ligger bakom öppna programs referensarkitektur. 

Öppna programs referensarkitektur består av följande delar: 

  * En logisk arkitektur understödd av ett antal _referensmodeller_
    * Referensmodellerna definierar de termer och begrepp som används då vi diskuterar arkitektur, t ex vad innebär begreppen "system" och "komponent" och hur relaterar de till varandra?
  * En mer konkret _teknisk arkitektur_, innehållande principer och riktlinjer för hur de logiska referesmodellerna konkret skall implementeras:
    * Övergripande principer som bestämmer hur system skall designas för att uppfylla visionen
    * Konkreta regelverk/anvisningar som hjälper projekten att uppfylla principerna
    * Exempelapplikationer och Proof of Concepts (PoC)
    * Ramverkskod, verktyg för kodgenerering etc


= Referensarkitekturens indelning = 
Referensarktekturen består av den överordnade logiska modellen (_referensmodellen_) samt den implementationsnära _tekniska arkitekturen_, som beskriver hur referensarkitekturen skall realiseras.

Till den tekniska arkitekturen hör även dokumentation för systemutvecklingsstöd som inte direkt har med arkitektur att göra men som stödjer den. I den tekniska arkitekturen ingår även referensapplikationer och andra kodexempel.

= Läsanvisning = 

Presentationen [http://oppna-program.googlecode.com/svn/reference-architecture/Introduktion/Referensarkitektur_oversikt.ppt Referensarkitektur_översikt.ppt] ger en bra överblick över hela referensarkitekturen och kan därmed vara lämplig att börja med. 

Sedan rekommenderas att först läsa igenom de delar som beskriver den logiska arkitekturen inkl referens-modellerna för att få en konceptuell förståelse.

== Logisk arkitektur ==
Den logiska arkitekturen inklusive referensmodellerna beskrivs på sidan [RA_Logisk_arkitektur].

== Teknisk arkitektur ==
En inledande introduktion finns på sidan [RA_Teknisk_arkitektur]. Detaljerade anvisningar finns sedan inom ett antal områden, se nedan eller [RA_Teknisk_arkitektur] för en länklista. För kodexempel hänvisas till referensapplikation(erna) samt övriga kodexempel (PoC) för specifika aspekter (t ex versionering av webservices). En översikt över vilka kodexempel som finns ges på introduktionssidan.  

== För utvecklare av referensarkitekturen ==

Nya utvecklare i referensarkitekturprojektet (eller de som är intresserade av själva referensarkitekturens källkod, i form av ramverkskod etc) hänvisar vi till sidan [RA_Introduktion_for_committers]. 

= Fullständig dokumentlista = 

Följande wikisidor och dokument finns inom referensarkitekturen:

  * [RA_Todo Todo-lista för Referensarkitekturprojektet] - Utestående punkter och förbättringar.
  * [RA_Introduktion_for_committers Introduktion för committers i Referensarkitekturprojektet] - Här beskrivs kortfattat hur man hittar i de olika projekt som utgör källkoden för själva referensarkitekturen, inkl ramverkskod och maven plugin etc.
  * [http://oppna-program.googlecode.com/svn/reference-architecture/Introduktion/Referensarkitektur_oversikt.ppt Referensarkitektur_översikt.ppt] - Övergripande presentation över hela RA.  
  * [RA_Vision_och_krav Vision och krav] - Vision för och krav på referensarkitekturen
  * Kravhantering
    * [http://oppna-program.googlecode.com/svn/reference-architecture/Kravhantering/Upphandling/Gemensamma_krav/Gemensamma_Icke-funktionella_krav_upphandling_av_systemstod.docx Gemensamma_Icke-funktionella_krav_upphandling_av_systemstod.docx] - Dokumentet är tänkt att samla gemensamma, icke-funktionella krav (i dagsläget bara ett embryo, behöver fyllas på med innehåll).
    * [http://oppna-program.googlecode.com/svn/reference-architecture/Kravhantering/Upphandling/Mallar/Mall_Icke-funktionella_krav_upphandling_av_systemstod.docx Mall_Icke-funktionella_krav_upphandling_av_systemstod.docx] - Mall för gemensamma icke-funktionella krav (i dagsläget ett utkast).   
  * [RA_Logisk_arkitektur Logisk arkitektur]
    * [http://oppna-program.googlecode.com/svn/reference-architecture/Logisk_arkitektur/Referensmodell_arkitektur_oppna_program.ppt Referensmodell_arkitektur_oppna_program.ppt]
    * [http://oppna-program.googlecode.com/svn/reference-architecture/Logisk_arkitektur/Modell_Referensarkitektur_oppna_program.EAP Modell_Referensarkitektur_oppna_program.EAP] - Modellfil på format för produkten Enterprise Architect.`*` 
  * [RA_Teknisk_arkitektur Teknisk arkitektur]
    * [RA_Strukturerad_Forteckning Förteckning över ramverk och tredjepartskomponenter]
    * Systemutveckling
      * Generellt 
        * Konfigurationshantering
          * [http://oppna-program.googlecode.com/svn/reference-architecture/Teknisk_arkitektur/Systemutveckling/Generellt/Konfigurationshantering/Anvisningar_Konfigurationshantering.doc  Anvisningar_Konfigurationshantering.doc] - Detaljerade anvisningar om hur man versionerar maven-artefakter, lablar i subversion etc.
          * [http://oppna-program.googlecode.com/svn/reference-architecture/Teknisk_arkitektur/Systemutveckling/Generellt/Konfigurationshantering/Anvisningar_Verktyg_Subversion.doc   Anvisningar_Verktyg_Subversion.doc]
        * !WebServices
          * [RA_Anvisningar_WSDL_design]
          * [RA_Anvisningar_Versionering_XMLSchema]
      * Java EE
        * [RA_Anvisningar_Utvecklingsmiljo Uppsättning av utvecklingsmiljön] 
        * [RA_Anvisningar_Kallkodstruktur Referensarkitekturens källkodsstruktur]
        * [RA_Anvisningar_Beroenden_Mellan_Komponenter Beroenden mellan verksamhetskomponenter]
        * [http://oppna-program.googlecode.com/svn/reference-architecture/Teknisk_arkitektur/Systemutveckling/JavaEE/Anvisningar_Anslutningsskikt_Webb.doc Anvisningar_Anslutningsskikt_Webb.doc]
        * [http://oppna-program.googlecode.com/svn/reference-architecture/Teknisk_arkitektur/Systemutveckling/JavaEE/Anvisningar_Anslutningsskikt_Portlet.doc Anvisningar_Anslutningsskikt_Portlet.doc]
        * [RA_Anvisningar_Anslutningsskikt_WebServices Anvisningar för anslutningsskikt webbservices]
        * [RA_Anvisningar_Verksamhetsskikt Anvisningar för verksamhetsskiktet]
        * [RA_Anvisningar_Resursskikt Anvisningar för resursskiktet]
        *  [http://oppna-program.googlecode.com/svn/reference-architecture/Teknisk_arkitektur/Systemutveckling/JavaEE/Anvisningar_Kontinuerlig_Integration.doc   Anvisningar_Kontinuerlig_Integration.doc] - Information om kontinuerlig integration (informationen är inaktuell och behöver uppdateras efter open sourcening).
  * Övriga presentationer
    * [http://oppna-program.googlecode.com/svn/reference-architecture/Presentationer/Tekniskt_ramverk_portal_VGR.ppt Tekniskt_ramverk_portal_VGR.ppt] - Presentation som hölls för Göteborgs stad Intraservice 2008  (ouppdaterad - se hellre [http://oppna-program.googlecode.com/svn/reference-architecture/Introduktion/Referensarkitektur_oversikt.ppt Referensarkitektur_översikt.ppt]).
    * [http://oppna-program.googlecode.com/svn/reference-architecture/Presentationer/Teknisk_presentation_Callista_Developer_Conference_2008.ppt Teknisk_presentation_Callista_Developer_Conference_2008.ppt] - Teknisk presentation på Callista Developer Conference 2008. Beskriver den tekniska arkitekturen inkl dess motivationsfaktorer (ouppdaterad - se hellre [http://oppna-program.googlecode.com/svn/reference-architecture/Introduktion/Referensarkitektur_oversikt.ppt Referensarkitektur_översikt.ppt]).

`*` Produktsida: http://www.sparxsystems.com.au/products/. Gratis "Viewer" kan laddas ner här: http://www.sparxsystems.com.au/bin/EALite.exe








								
		