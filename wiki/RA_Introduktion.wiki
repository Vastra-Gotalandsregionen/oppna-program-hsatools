#summary Introduktion till referensarkitekturen
#labels Featured
= Introduktion =

Denna sida ska ge en snabb introduktion till referensarkitekturen (förkortad RA) och den dokumentation och exempel som finns.
Främst görs det i form av läsanvisningar och hänvisning till kodexempel.

= Referensarkitekturens syfte = 
Det övergripande syftet med att ha en referensarkitektur är att styra alla projekt mot en gemensam arkitektur. Fördelarna med detta är många: 

  * Projektekonomi
    * Generellt: Korta projekttiden
    * Minska tiden för uppsättning av projektets infrastruktur
    * Minska mängden ”teknisk forskning” i projekten
    * Etc.
  * IT-ekonomi
    * Ökad livslängd på utvecklade system 
    * Flexibelt nyttjande av personal/konsulter
    * Minskade utbildningskostnader
  * Verksamhetsnytta
    * Välintegrerade grundfunktioner tvärs system, t ex inloggning
  * Nå tydlighet i arkitekturarbetet
    * Kraven på arkitektur är kända för projekten

= Vad är en referensarkitektur? = 

En referensarkitektur är en abstrakt arkitektur som används som en mall för att skapa konkreta arkitekturer. Referensarkitekturen innehåller principer och guidelines som bestämmer hur system skall designas.

Motivet för referensarkitekturen är vanligtvis en övergripande vision och ett antal krav. Se Refernsarkitektur_oversikt.ppt för en genomgång av den vision och de konkreta krav som ligger bakom öppna programs referensarkitektur. 

Öppna programs referensarkitektur består av följande delar: 

  * En logisk arkitektur understödd av ett antal _referensmodeller_
    * Referensmodellerna definierar de termer och begrepp som används då vi diskuterar arkitektur, t ex vad innebär begreppen "system" och "komponent" och hur relaterar de till varandra?
  * En mer konkret _teknisk arkitektur_, innehållande principer och riktlinjer för hur de logiska referesmodellerna konkret skall implementeras:
    * Övergripande principer som bestämmer hur system skall designas för att uppfylla visionen
    * Konkreta regelverk/anvisningar som hjälper projekten att uppfylla principerna
    * Exempelapplikationer och Proof of Concepts (PoC)
    * Ramverkskod, verktyg för kodgenerering etc


= Dokumentationsstruktur = 
Referensarktekturen består av den överordnade logiska modellen (_referensmodellen_) samt den implementationsnära _tekniska arkitekturen_, som beskriver hur referensarkitekturen skall realiseras.

Till den tekniska arkitekturen hör även dokumentation för systemutvecklingsstöd som inte direkt har med arkitektur att göra men som stödjer den. I den tekniska arkitekturen ingår även referensapplikationer och andra kodexempel.

= Läsanvisning = 
Det är lämpligt att först läsa igenom det dokument som beskriver referens-modellerna för att få en konceptuell förståelse.
== Logisk RA ==
  * Snabb översikt: `Referensarkitektur_översikt.ppt`
  * Mer ingående beskrivning: `3R-0009 Anvisning 3R referensarkitekturv2.doc`

== Teknisk arkitektur ==
För kodexempel hänvisas till referensapplikation(erna) samt övriga kodexempel för specifika aspekter (t ex versionering av WSDL).
En översikt över kodexempel ges i:
`\ref-systems\readme.txt`

En översikt med motivationsfaktorer ges i: `Teknisk presentation på Callista Developer Conference 2008`
 
= Dokumentationsöversikt= 

|| *Namn* || *Dokumenttyp* || *Beskrivning* ||
|| Referensarkitektur_översikt.ppt || Presentation, Introduktion || Lättförståelig introduktion till RA ||
|| [RA_Introduktion] (denna sida)|| Introduktion || Introduktion med läsanvisningar och länkar till vidare information. ||
|| Genensamma Icke-funktionella krav vid upphandling av systemstöd.docx || Kravdokument || Ej färdigt dokument. Mall för gemensamma krav. ||
|| Mall Icke-funktionella krav upphandling av systemstöd.docx || Kravdokument || Ej färdigt dokument. Mall för gemensamma krav. ||
|| 3R-0009 Anvisning 3R referensarkitektur.doc || Anvisning || Beskriver den logiska modellen ingående ||
|| Referensmodell arkitektur 3R.ppt || Presentation || Beskriver den logiska modellen ingående ||
|| Tekniskt ramverk portal VGR.ppt || Teknisk arkitektur, Presentation || Presentation som hölls för Göteborgs stad Intraservice. ||
|| Teknisk presentation på Callista Developer Conference 2008.ppt || Teknisk arkitektur, Presentation || Teknisk presentation på Callista Developer Conference 2008. ||

								

		 						Presentation på Callista Developer Conference. Innehåller kraven, teknikstack etc. Bör extraheras. 
								
	Systemutveckling							
		DotNet						
		Generellt						
			Webservices					
				Anvisningar för WSDL-design.doc				Anvisningar för wsdl-utveckling. Bör finnas kvar.
				Anvisningar för versionering av XML-Scheman.doc				Anvisningar för versionering av XML-scheman. Bör finnas kvar och ev utökas med förtydligande exempel (hänvisningar till kod).
			Konfigurationshantering					
				Anvisningar_Konfigurationshantering.doc				Innehåller info om hur man versionerar maven-artefakter, lablar i subversion etc. Bör finnas kvar i någon form. 
				Anvisningar_Verktyg_Subversion.doc				Kortfattat om subversion. Bör finnas kvar i någon form. 

		Java EE						
			Anvisningar_Kallkodsstruktur_Byggsystem.doc					Beskriver hur källkodsstrukturen ser ut och hur detta mappas mot ref-arken. Beskriver även hur maven-pluginen används för att genrera upp projekt.  
			Anvisningar_Verktyg_Maven2.doc					Beskriver hur man får upp sin utvecklingsmiljö. Deploy till VGR-repo, refark-specifika pluginer mm. Ska finnas kvar men i annan form. 
			Anvisningar_Portletutveckling.doc					Beskriver hur man utvecklar portlets. Innehåller ev något ouppdaterad information, behöver revideras. Not: Befintliga projekt använder nyare portlet-standarden JSR 286 istf JSR168.
			Anvisningar_Klient_UI_lager.doc					Innehåller teknikstack för java ee-weblagret. Innehåller även lite annan info specifik för RA.
			Anvisningar_kontinuerlig_integration.doc					Innehåller beskrivning av Continuum och hur det används. VGR har gått över till Hudson så dokumentet är inaktuellt. Dessutom förändras detta iom open sourceningen, då atlassian skall användas.